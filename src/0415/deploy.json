{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
      "workspaces_coreg_ask01_workspace_name": {
          "defaultValue": "coreg-ask01-workspace",
          "type": "String"
      }
  },
  "variables": {},
  "resources": [
      {
          "type": "microsoft.operationalinsights/workspaces",
          "apiVersion": "2020-10-01",
          "name": "[parameters('workspaces_coreg_ask01_workspace_name')]",
          "location": "japaneast",
          "properties": {
              "provisioningState": "Succeeded",
              "sku": {
                  "name": "pergb2018"
              },
              "retentionInDays": 60,
              "features": {
                  "legacy": 0,
                  "searchVersion": 1,
                  "enableLogAccessUsingOnlyResourcePermissions": true
              },
              "workspaceCapping": {
                  "dailyQuotaGb": -1
              },
              "publicNetworkAccessForIngestion": "Enabled",
              "publicNetworkAccessForQuery": "Enabled"
          }
      },
      {
          "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
          "apiVersion": "2020-08-01",
          "name": "[concat(parameters('workspaces_coreg_ask01_workspace_name'), '/LogManagement(', parameters('workspaces_coreg_ask01_workspace_name'), ')_General|AlphabeticallySortedComputers')]",
          "dependsOn": [
              "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspaces_coreg_ask01_workspace_name'))]"
          ],
          "properties": {
              "DisplayName": "All Computers with their most recent data",
              "Category": "General Exploration",
              "Query": "search not(ObjectName == \"Advisor Metrics\" or ObjectName == \"ManagedSpace\") | summarize AggregatedValue = max(TimeGenerated) by Computer | limit 500000 | sort by Computer asc\r\n// Oql: NOT(ObjectName=\"Advisor Metrics\" OR ObjectName=ManagedSpace) | measure max(TimeGenerated) by Computer | top 500000 | Sort Computer // Args: {OQ: True; WorkspaceId: 00000000-0000-0000-0000-000000000000} // Settings: {PTT: True; SortI: True; SortF: True} // Version: 0.1.122",
              "Version": 2
          }
      },
      {
          "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
          "apiVersion": "2020-08-01",
          "name": "[concat(parameters('workspaces_coreg_ask01_workspace_name'), '/LogManagement(', parameters('workspaces_coreg_ask01_workspace_name'), ')_General|dataPointsPerManagementGroup')]",
          "dependsOn": [
              "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspaces_coreg_ask01_workspace_name'))]"
          ],
          "properties": {
              "DisplayName": "Which Management Group is generating the most data points?",
              "Category": "General Exploration",
              "Query": "search * | summarize AggregatedValue = count() by ManagementGroupName\r\n// Oql: * | Measure count() by ManagementGroupName // Args: {OQ: True; WorkspaceId: 00000000-0000-0000-0000-000000000000} // Settings: {PTT: True; SortI: True; SortF: True} // Version: 0.1.122",
              "Version": 2
          }
      },
      {
          "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
          "apiVersion": "2020-08-01",
          "name": "[concat(parameters('workspaces_coreg_ask01_workspace_name'), '/LogManagement(', parameters('workspaces_coreg_ask01_workspace_name'), ')_General|dataTypeDistribution')]",
          "dependsOn": [
              "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspaces_coreg_ask01_workspace_name'))]"
          ],
          "properties": {
              "DisplayName": "Distribution of data Types",
              "Category": "General Exploration",
              "Query": "search * | extend Type = $table | summarize AggregatedValue = count() by Type\r\n// Oql: * | Measure count() by Type // Args: {OQ: True; WorkspaceId: 00000000-0000-0000-0000-000000000000} // Settings: {PTT: True; SortI: True; SortF: True} // Version: 0.1.122",
              "Version": 2
          }
      },
      {
          "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
          "apiVersion": "2020-08-01",
          "name": "[concat(parameters('workspaces_coreg_ask01_workspace_name'), '/LogManagement(', parameters('workspaces_coreg_ask01_workspace_name'), ')_General|StaleComputers')]",
          "dependsOn": [
              "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspaces_coreg_ask01_workspace_name'))]"
          ],
          "properties": {
              "DisplayName": "Stale Computers (data older than 24 hours)",
              "Category": "General Exploration",
              "Query": "search not(ObjectName == \"Advisor Metrics\" or ObjectName == \"ManagedSpace\") | summarize lastdata = max(TimeGenerated) by Computer | limit 500000 | where lastdata < ago(24h)\r\n// Oql: NOT(ObjectName=\"Advisor Metrics\" OR ObjectName=ManagedSpace) | measure max(TimeGenerated) as lastdata by Computer | top 500000 | where lastdata < NOW-24HOURS // Args: {OQ: True; WorkspaceId: 00000000-0000-0000-0000-000000000000} // Settings: {PTT: True; SortI: True; SortF: True} // Version: 0.1.122",
              "Version": 2
          }
      },
      {
          "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
          "apiVersion": "2020-08-01",
          "name": "[concat(parameters('workspaces_coreg_ask01_workspace_name'), '/LogManagement(', parameters('workspaces_coreg_ask01_workspace_name'), ')_LogManagement|AllEvents')]",
          "dependsOn": [
              "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspaces_coreg_ask01_workspace_name'))]"
          ],
          "properties": {
              "DisplayName": "All Events",
              "Category": "Log Management",
              "Query": "Event | sort by TimeGenerated desc\r\n// Oql: Type=Event // Args: {OQ: True; WorkspaceId: 00000000-0000-0000-0000-000000000000} // Settings: {PTT: True; SortI: True; SortF: True} // Version: 0.1.122",
              "Version": 2
          }
      },
      {
          "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
          "apiVersion": "2020-08-01",
          "name": "[concat(parameters('workspaces_coreg_ask01_workspace_name'), '/LogManagement(', parameters('workspaces_coreg_ask01_workspace_name'), ')_LogManagement|AllSyslog')]",
          "dependsOn": [
              "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspaces_coreg_ask01_workspace_name'))]"
          ],
          "properties": {
              "DisplayName": "All Syslogs",
              "Category": "Log Management",
              "Query": "Syslog | sort by TimeGenerated desc\r\n// Oql: Type=Syslog // Args: {OQ: True; WorkspaceId: 00000000-0000-0000-0000-000000000000} // Settings: {PTT: True; SortI: True; SortF: True} // Version: 0.1.122",
              "Version": 2
          }
      },
      {
          "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
          "apiVersion": "2020-08-01",
          "name": "[concat(parameters('workspaces_coreg_ask01_workspace_name'), '/LogManagement(', parameters('workspaces_coreg_ask01_workspace_name'), ')_LogManagement|AllSyslogByFacility')]",
          "dependsOn": [
              "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspaces_coreg_ask01_workspace_name'))]"
          ],
          "properties": {
              "DisplayName": "All Syslog Records grouped by Facility",
              "Category": "Log Management",
              "Query": "Syslog | summarize AggregatedValue = count() by Facility\r\n// Oql: Type=Syslog | Measure count() by Facility // Args: {OQ: True; WorkspaceId: 00000000-0000-0000-0000-000000000000} // Settings: {PTT: True; SortI: True; SortF: True} // Version: 0.1.122",
              "Version": 2
          }
      },
      {
          "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
          "apiVersion": "2020-08-01",
          "name": "[concat(parameters('workspaces_coreg_ask01_workspace_name'), '/LogManagement(', parameters('workspaces_coreg_ask01_workspace_name'), ')_LogManagement|AllSyslogByProcessName')]",
          "dependsOn": [
              "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspaces_coreg_ask01_workspace_name'))]"
          ],
          "properties": {
              "DisplayName": "All Syslog Records grouped by ProcessName",
              "Category": "Log Management",
              "Query": "Syslog | summarize AggregatedValue = count() by ProcessName\r\n// Oql: Type=Syslog | Measure count() by ProcessName // Args: {OQ: True; WorkspaceId: 00000000-0000-0000-0000-000000000000} // Settings: {PTT: True; SortI: True; SortF: True} // Version: 0.1.122",
              "Version": 2
          }
      },
      {
          "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
          "apiVersion": "2020-08-01",
          "name": "[concat(parameters('workspaces_coreg_ask01_workspace_name'), '/LogManagement(', parameters('workspaces_coreg_ask01_workspace_name'), ')_LogManagement|AllSyslogsWithErrors')]",
          "dependsOn": [
              "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspaces_coreg_ask01_workspace_name'))]"
          ],
          "properties": {
              "DisplayName": "All Syslog Records with Errors",
              "Category": "Log Management",
              "Query": "Syslog | where SeverityLevel == \"error\" | sort by TimeGenerated desc\r\n// Oql: Type=Syslog SeverityLevel=error // Args: {OQ: True; WorkspaceId: 00000000-0000-0000-0000-000000000000} // Settings: {PTT: True; SortI: True; SortF: True} // Version: 0.1.122",
              "Version": 2
          }
      },
      {
          "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
          "apiVersion": "2020-08-01",
          "name": "[concat(parameters('workspaces_coreg_ask01_workspace_name'), '/LogManagement(', parameters('workspaces_coreg_ask01_workspace_name'), ')_LogManagement|AverageHTTPRequestTimeByClientIPAddress')]",
          "dependsOn": [
              "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspaces_coreg_ask01_workspace_name'))]"
          ],
          "properties": {
              "DisplayName": "Average HTTP Request time by Client IP Address",
              "Category": "Log Management",
              "Query": "search * | extend Type = $table | where Type == W3CIISLog | summarize AggregatedValue = avg(TimeTaken) by cIP\r\n// Oql: Type=W3CIISLog | Measure Avg(TimeTaken) by cIP // Args: {OQ: True; WorkspaceId: 00000000-0000-0000-0000-000000000000} // Settings: {PEF: True; SortI: True; SortF: True} // Version: 0.1.122",
              "Version": 2
          }
      },
      {
          "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
          "apiVersion": "2020-08-01",
          "name": "[concat(parameters('workspaces_coreg_ask01_workspace_name'), '/LogManagement(', parameters('workspaces_coreg_ask01_workspace_name'), ')_LogManagement|AverageHTTPRequestTimeHTTPMethod')]",
          "dependsOn": [
              "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspaces_coreg_ask01_workspace_name'))]"
          ],
          "properties": {
              "DisplayName": "Average HTTP Request time by HTTP Method",
              "Category": "Log Management",
              "Query": "search * | extend Type = $table | where Type == W3CIISLog | summarize AggregatedValue = avg(TimeTaken) by csMethod\r\n// Oql: Type=W3CIISLog | Measure Avg(TimeTaken) by csMethod // Args: {OQ: True; WorkspaceId: 00000000-0000-0000-0000-000000000000} // Settings: {PEF: True; SortI: True; SortF: True} // Version: 0.1.122",
              "Version": 2
          }
      },
      {
          "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
          "apiVersion": "2020-08-01",
          "name": "[concat(parameters('workspaces_coreg_ask01_workspace_name'), '/LogManagement(', parameters('workspaces_coreg_ask01_workspace_name'), ')_LogManagement|CountIISLogEntriesClientIPAddress')]",
          "dependsOn": [
              "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspaces_coreg_ask01_workspace_name'))]"
          ],
          "properties": {
              "DisplayName": "Count of IIS Log Entries by Client IP Address",
              "Category": "Log Management",
              "Query": "search * | extend Type = $table | where Type == W3CIISLog | summarize AggregatedValue = count() by cIP\r\n// Oql: Type=W3CIISLog | Measure count() by cIP // Args: {OQ: True; WorkspaceId: 00000000-0000-0000-0000-000000000000} // Settings: {PEF: True; SortI: True; SortF: True} // Version: 0.1.122",
              "Version": 2
          }
      },
      {
          "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
          "apiVersion": "2020-08-01",
          "name": "[concat(parameters('workspaces_coreg_ask01_workspace_name'), '/LogManagement(', parameters('workspaces_coreg_ask01_workspace_name'), ')_LogManagement|CountIISLogEntriesHTTPRequestMethod')]",
          "dependsOn": [
              "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspaces_coreg_ask01_workspace_name'))]"
          ],
          "properties": {
              "DisplayName": "Count of IIS Log Entries by HTTP Request Method",
              "Category": "Log Management",
              "Query": "search * | extend Type = $table | where Type == W3CIISLog | summarize AggregatedValue = count() by csMethod\r\n// Oql: Type=W3CIISLog | Measure count() by csMethod // Args: {OQ: True; WorkspaceId: 00000000-0000-0000-0000-000000000000} // Settings: {PEF: True; SortI: True; SortF: True} // Version: 0.1.122",
              "Version": 2
          }
      },
      {
          "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
          "apiVersion": "2020-08-01",
          "name": "[concat(parameters('workspaces_coreg_ask01_workspace_name'), '/LogManagement(', parameters('workspaces_coreg_ask01_workspace_name'), ')_LogManagement|CountIISLogEntriesHTTPUserAgent')]",
          "dependsOn": [
              "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspaces_coreg_ask01_workspace_name'))]"
          ],
          "properties": {
              "DisplayName": "Count of IIS Log Entries by HTTP User Agent",
              "Category": "Log Management",
              "Query": "search * | extend Type = $table | where Type == W3CIISLog | summarize AggregatedValue = count() by csUserAgent\r\n// Oql: Type=W3CIISLog | Measure count() by csUserAgent // Args: {OQ: True; WorkspaceId: 00000000-0000-0000-0000-000000000000} // Settings: {PEF: True; SortI: True; SortF: True} // Version: 0.1.122",
              "Version": 2
          }
      },
      {
          "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
          "apiVersion": "2020-08-01",
          "name": "[concat(parameters('workspaces_coreg_ask01_workspace_name'), '/LogManagement(', parameters('workspaces_coreg_ask01_workspace_name'), ')_LogManagement|CountOfIISLogEntriesByHostRequestedByClient')]",
          "dependsOn": [
              "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspaces_coreg_ask01_workspace_name'))]"
          ],
          "properties": {
              "DisplayName": "Count of IIS Log Entries by Host requested by client",
              "Category": "Log Management",
              "Query": "search * | extend Type = $table | where Type == W3CIISLog | summarize AggregatedValue = count() by csHost\r\n// Oql: Type=W3CIISLog | Measure count() by csHost // Args: {OQ: True; WorkspaceId: 00000000-0000-0000-0000-000000000000} // Settings: {PEF: True; SortI: True; SortF: True} // Version: 0.1.122",
              "Version": 2
          }
      },
      {
          "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
          "apiVersion": "2020-08-01",
          "name": "[concat(parameters('workspaces_coreg_ask01_workspace_name'), '/LogManagement(', parameters('workspaces_coreg_ask01_workspace_name'), ')_LogManagement|CountOfIISLogEntriesByURLForHost')]",
          "dependsOn": [
              "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspaces_coreg_ask01_workspace_name'))]"
          ],
          "properties": {
              "DisplayName": "Count of IIS Log Entries by URL for the host \"www.contoso.com\" (replace with your own)",
              "Category": "Log Management",
              "Query": "search csHost == \"www.contoso.com\" | extend Type = $table | where Type == W3CIISLog | summarize AggregatedValue = count() by csUriStem\r\n// Oql: Type=W3CIISLog csHost=\"www.contoso.com\" | Measure count() by csUriStem // Args: {OQ: True; WorkspaceId: 00000000-0000-0000-0000-000000000000} // Settings: {PEF: True; SortI: True; SortF: True} // Version: 0.1.122",
              "Version": 2
          }
      },
      {
          "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
          "apiVersion": "2020-08-01",
          "name": "[concat(parameters('workspaces_coreg_ask01_workspace_name'), '/LogManagement(', parameters('workspaces_coreg_ask01_workspace_name'), ')_LogManagement|CountOfIISLogEntriesByURLRequestedByClient')]",
          "dependsOn": [
              "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspaces_coreg_ask01_workspace_name'))]"
          ],
          "properties": {
              "DisplayName": "Count of IIS Log Entries by URL requested by client (without query strings)",
              "Category": "Log Management",
              "Query": "search * | extend Type = $table | where Type == W3CIISLog | summarize AggregatedValue = count() by csUriStem\r\n// Oql: Type=W3CIISLog | Measure count() by csUriStem // Args: {OQ: True; WorkspaceId: 00000000-0000-0000-0000-000000000000} // Settings: {PEF: True; SortI: True; SortF: True} // Version: 0.1.122",
              "Version": 2
          }
      },
      {
          "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
          "apiVersion": "2020-08-01",
          "name": "[concat(parameters('workspaces_coreg_ask01_workspace_name'), '/LogManagement(', parameters('workspaces_coreg_ask01_workspace_name'), ')_LogManagement|CountOfWarningEvents')]",
          "dependsOn": [
              "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspaces_coreg_ask01_workspace_name'))]"
          ],
          "properties": {
              "DisplayName": "Count of Events with level \"Warning\" grouped by Event ID",
              "Category": "Log Management",
              "Query": "Event | where EventLevelName == \"warning\" | summarize AggregatedValue = count() by EventID\r\n// Oql: Type=Event EventLevelName=warning | Measure count() by EventID // Args: {OQ: True; WorkspaceId: 00000000-0000-0000-0000-000000000000} // Settings: {PTT: True; SortI: True; SortF: True} // Version: 0.1.122",
              "Version": 2
          }
      },
      {
          "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
          "apiVersion": "2020-08-01",
          "name": "[concat(parameters('workspaces_coreg_ask01_workspace_name'), '/LogManagement(', parameters('workspaces_coreg_ask01_workspace_name'), ')_LogManagement|DisplayBreakdownRespondCodes')]",
          "dependsOn": [
              "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspaces_coreg_ask01_workspace_name'))]"
          ],
          "properties": {
              "DisplayName": "Shows breakdown of response codes",
              "Category": "Log Management",
              "Query": "search * | extend Type = $table | where Type == W3CIISLog | summarize AggregatedValue = count() by scStatus\r\n// Oql: Type=W3CIISLog | Measure count() by scStatus // Args: {OQ: True; WorkspaceId: 00000000-0000-0000-0000-000000000000} // Settings: {PEF: True; SortI: True; SortF: True} // Version: 0.1.122",
              "Version": 2
          }
      },
      {
          "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
          "apiVersion": "2020-08-01",
          "name": "[concat(parameters('workspaces_coreg_ask01_workspace_name'), '/LogManagement(', parameters('workspaces_coreg_ask01_workspace_name'), ')_LogManagement|EventsByEventLog')]",
          "dependsOn": [
              "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspaces_coreg_ask01_workspace_name'))]"
          ],
          "properties": {
              "DisplayName": "Count of Events grouped by Event Log",
              "Category": "Log Management",
              "Query": "Event | summarize AggregatedValue = count() by EventLog\r\n// Oql: Type=Event | Measure count() by EventLog // Args: {OQ: True; WorkspaceId: 00000000-0000-0000-0000-000000000000} // Settings: {PTT: True; SortI: True; SortF: True} // Version: 0.1.122",
              "Version": 2
          }
      },
      {
          "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
          "apiVersion": "2020-08-01",
          "name": "[concat(parameters('workspaces_coreg_ask01_workspace_name'), '/LogManagement(', parameters('workspaces_coreg_ask01_workspace_name'), ')_LogManagement|EventsByEventsID')]",
          "dependsOn": [
              "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspaces_coreg_ask01_workspace_name'))]"
          ],
          "properties": {
              "DisplayName": "Count of Events grouped by Event ID",
              "Category": "Log Management",
              "Query": "Event | summarize AggregatedValue = count() by EventID\r\n// Oql: Type=Event | Measure count() by EventID // Args: {OQ: True; WorkspaceId: 00000000-0000-0000-0000-000000000000} // Settings: {PTT: True; SortI: True; SortF: True} // Version: 0.1.122",
              "Version": 2
          }
      },
      {
          "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
          "apiVersion": "2020-08-01",
          "name": "[concat(parameters('workspaces_coreg_ask01_workspace_name'), '/LogManagement(', parameters('workspaces_coreg_ask01_workspace_name'), ')_LogManagement|EventsByEventSource')]",
          "dependsOn": [
              "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspaces_coreg_ask01_workspace_name'))]"
          ],
          "properties": {
              "DisplayName": "Count of Events grouped by Event Source",
              "Category": "Log Management",
              "Query": "Event | summarize AggregatedValue = count() by Source\r\n// Oql: Type=Event | Measure count() by Source // Args: {OQ: True; WorkspaceId: 00000000-0000-0000-0000-000000000000} // Settings: {PTT: True; SortI: True; SortF: True} // Version: 0.1.122",
              "Version": 2
          }
      },
      {
          "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
          "apiVersion": "2020-08-01",
          "name": "[concat(parameters('workspaces_coreg_ask01_workspace_name'), '/LogManagement(', parameters('workspaces_coreg_ask01_workspace_name'), ')_LogManagement|EventsInOMBetween2000to3000')]",
          "dependsOn": [
              "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspaces_coreg_ask01_workspace_name'))]"
          ],
          "properties": {
              "DisplayName": "Events in the Operations Manager Event Log whose Event ID is in the range between 2000 and 3000",
              "Category": "Log Management",
              "Query": "Event | where EventLog == \"Operations Manager\" and EventID >= 2000 and EventID <= 3000 | sort by TimeGenerated desc\r\n// Oql: Type=Event EventLog=\"Operations Manager\" EventID:[2000..3000] // Args: {OQ: True; WorkspaceId: 00000000-0000-0000-0000-000000000000} // Settings: {PTT: True; SortI: True; SortF: True} // Version: 0.1.122",
              "Version": 2
          }
      },
      {
          "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
          "apiVersion": "2020-08-01",
          "name": "[concat(parameters('workspaces_coreg_ask01_workspace_name'), '/LogManagement(', parameters('workspaces_coreg_ask01_workspace_name'), ')_LogManagement|EventsWithStartedinEventID')]",
          "dependsOn": [
              "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspaces_coreg_ask01_workspace_name'))]"
          ],
          "properties": {
              "DisplayName": "Count of Events containing the word \"started\" grouped by EventID",
              "Category": "Log Management",
              "Query": "search in (Event) \"started\" | summarize AggregatedValue = count() by EventID\r\n// Oql: Type=Event \"started\" | Measure count() by EventID // Args: {OQ: True; WorkspaceId: 00000000-0000-0000-0000-000000000000} // Settings: {PTT: True; SortI: True; SortF: True} // Version: 0.1.122",
              "Version": 2
          }
      },
      {
          "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
          "apiVersion": "2020-08-01",
          "name": "[concat(parameters('workspaces_coreg_ask01_workspace_name'), '/LogManagement(', parameters('workspaces_coreg_ask01_workspace_name'), ')_LogManagement|FindMaximumTimeTakenForEachPage')]",
          "dependsOn": [
              "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspaces_coreg_ask01_workspace_name'))]"
          ],
          "properties": {
              "DisplayName": "Find the maximum time taken for each page",
              "Category": "Log Management",
              "Query": "search * | extend Type = $table | where Type == W3CIISLog | summarize AggregatedValue = max(TimeTaken) by csUriStem\r\n// Oql: Type=W3CIISLog | Measure Max(TimeTaken) by csUriStem // Args: {OQ: True; WorkspaceId: 00000000-0000-0000-0000-000000000000} // Settings: {PEF: True; SortI: True; SortF: True} // Version: 0.1.122",
              "Version": 2
          }
      },
      {
          "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
          "apiVersion": "2020-08-01",
          "name": "[concat(parameters('workspaces_coreg_ask01_workspace_name'), '/LogManagement(', parameters('workspaces_coreg_ask01_workspace_name'), ')_LogManagement|IISLogEntriesForClientIP')]",
          "dependsOn": [
              "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspaces_coreg_ask01_workspace_name'))]"
          ],
          "properties": {
              "DisplayName": "IIS Log Entries for a specific client IP Address (replace with your own)",
              "Category": "Log Management",
              "Query": "search cIP == \"192.168.0.1\" | extend Type = $table | where Type == W3CIISLog | sort by TimeGenerated desc | project csUriStem, scBytes, csBytes, TimeTaken, scStatus\r\n// Oql: Type=W3CIISLog cIP=\"192.168.0.1\" | Select csUriStem,scBytes,csBytes,TimeTaken,scStatus // Args: {OQ: True; WorkspaceId: 00000000-0000-0000-0000-000000000000} // Settings: {PEF: True; SortI: True; SortF: True} // Version: 0.1.122",
              "Version": 2
          }
      },
      {
          "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
          "apiVersion": "2020-08-01",
          "name": "[concat(parameters('workspaces_coreg_ask01_workspace_name'), '/LogManagement(', parameters('workspaces_coreg_ask01_workspace_name'), ')_LogManagement|ListAllIISLogEntries')]",
          "dependsOn": [
              "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspaces_coreg_ask01_workspace_name'))]"
          ],
          "properties": {
              "DisplayName": "All IIS Log Entries",
              "Category": "Log Management",
              "Query": "search * | extend Type = $table | where Type == W3CIISLog | sort by TimeGenerated desc\r\n// Oql: Type=W3CIISLog // Args: {OQ: True; WorkspaceId: 00000000-0000-0000-0000-000000000000} // Settings: {PEF: True; SortI: True; SortF: True} // Version: 0.1.122",
              "Version": 2
          }
      },
      {
          "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
          "apiVersion": "2020-08-01",
          "name": "[concat(parameters('workspaces_coreg_ask01_workspace_name'), '/LogManagement(', parameters('workspaces_coreg_ask01_workspace_name'), ')_LogManagement|NoOfConnectionsToOMSDKService')]",
          "dependsOn": [
              "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspaces_coreg_ask01_workspace_name'))]"
          ],
          "properties": {
              "DisplayName": "How many connections to Operations Manager's SDK service by day",
              "Category": "Log Management",
              "Query": "Event | where EventID == 26328 and EventLog == \"Operations Manager\" | summarize AggregatedValue = count() by bin(TimeGenerated, 1d) | sort by TimeGenerated desc\r\n// Oql: Type=Event EventID=26328 EventLog=\"Operations Manager\" | Measure count() interval 1DAY // Args: {OQ: True; WorkspaceId: 00000000-0000-0000-0000-000000000000} // Settings: {PTT: True; SortI: True; SortF: True} // Version: 0.1.122",
              "Version": 2
          }
      },
      {
          "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
          "apiVersion": "2020-08-01",
          "name": "[concat(parameters('workspaces_coreg_ask01_workspace_name'), '/LogManagement(', parameters('workspaces_coreg_ask01_workspace_name'), ')_LogManagement|ServerRestartTime')]",
          "dependsOn": [
              "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspaces_coreg_ask01_workspace_name'))]"
          ],
          "properties": {
              "DisplayName": "When did my servers initiate restart?",
              "Category": "Log Management",
              "Query": "search in (Event) \"shutdown\" and EventLog == \"System\" and Source == \"User32\" and EventID == 1074 | sort by TimeGenerated desc | project TimeGenerated, Computer\r\n// Oql: shutdown Type=Event EventLog=System Source=User32 EventID=1074 | Select TimeGenerated,Computer // Args: {OQ: True; WorkspaceId: 00000000-0000-0000-0000-000000000000} // Settings: {PTT: True; SortI: True; SortF: True} // Version: 0.1.122",
              "Version": 2
          }
      },
      {
          "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
          "apiVersion": "2020-08-01",
          "name": "[concat(parameters('workspaces_coreg_ask01_workspace_name'), '/LogManagement(', parameters('workspaces_coreg_ask01_workspace_name'), ')_LogManagement|Show404PagesList')]",
          "dependsOn": [
              "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspaces_coreg_ask01_workspace_name'))]"
          ],
          "properties": {
              "DisplayName": "Shows which pages people are getting a 404 for",
              "Category": "Log Management",
              "Query": "search scStatus == 404 | extend Type = $table | where Type == W3CIISLog | summarize AggregatedValue = count() by csUriStem\r\n// Oql: Type=W3CIISLog scStatus=404 | Measure count() by csUriStem // Args: {OQ: True; WorkspaceId: 00000000-0000-0000-0000-000000000000} // Settings: {PEF: True; SortI: True; SortF: True} // Version: 0.1.122",
              "Version": 2
          }
      },
      {
          "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
          "apiVersion": "2020-08-01",
          "name": "[concat(parameters('workspaces_coreg_ask01_workspace_name'), '/LogManagement(', parameters('workspaces_coreg_ask01_workspace_name'), ')_LogManagement|ShowServersThrowingInternalServerError')]",
          "dependsOn": [
              "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspaces_coreg_ask01_workspace_name'))]"
          ],
          "properties": {
              "DisplayName": "Shows servers that are throwing internal server error",
              "Category": "Log Management",
              "Query": "search scStatus == 500 | extend Type = $table | where Type == W3CIISLog | summarize AggregatedValue = count() by sComputerName\r\n// Oql: Type=W3CIISLog scStatus=500 | Measure count() by sComputerName // Args: {OQ: True; WorkspaceId: 00000000-0000-0000-0000-000000000000} // Settings: {PEF: True; SortI: True; SortF: True} // Version: 0.1.122",
              "Version": 2
          }
      },
      {
          "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
          "apiVersion": "2020-08-01",
          "name": "[concat(parameters('workspaces_coreg_ask01_workspace_name'), '/LogManagement(', parameters('workspaces_coreg_ask01_workspace_name'), ')_LogManagement|TotalBytesReceivedByEachAzureRoleInstance')]",
          "dependsOn": [
              "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspaces_coreg_ask01_workspace_name'))]"
          ],
          "properties": {
              "DisplayName": "Total Bytes received by each Azure Role Instance",
              "Category": "Log Management",
              "Query": "search * | extend Type = $table | where Type == W3CIISLog | summarize AggregatedValue = sum(csBytes) by RoleInstance\r\n// Oql: Type=W3CIISLog | Measure Sum(csBytes) by RoleInstance // Args: {OQ: True; WorkspaceId: 00000000-0000-0000-0000-000000000000} // Settings: {PEF: True; SortI: True; SortF: True} // Version: 0.1.122",
              "Version": 2
          }
      },
      {
          "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
          "apiVersion": "2020-08-01",
          "name": "[concat(parameters('workspaces_coreg_ask01_workspace_name'), '/LogManagement(', parameters('workspaces_coreg_ask01_workspace_name'), ')_LogManagement|TotalBytesReceivedByEachIISComputer')]",
          "dependsOn": [
              "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspaces_coreg_ask01_workspace_name'))]"
          ],
          "properties": {
              "DisplayName": "Total Bytes received by each IIS Computer",
              "Category": "Log Management",
              "Query": "search * | extend Type = $table | where Type == W3CIISLog | summarize AggregatedValue = sum(csBytes) by Computer | limit 500000\r\n// Oql: Type=W3CIISLog | Measure Sum(csBytes) by Computer | top 500000 // Args: {OQ: True; WorkspaceId: 00000000-0000-0000-0000-000000000000} // Settings: {PEF: True; SortI: True; SortF: True} // Version: 0.1.122",
              "Version": 2
          }
      },
      {
          "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
          "apiVersion": "2020-08-01",
          "name": "[concat(parameters('workspaces_coreg_ask01_workspace_name'), '/LogManagement(', parameters('workspaces_coreg_ask01_workspace_name'), ')_LogManagement|TotalBytesRespondedToClientsByClientIPAddress')]",
          "dependsOn": [
              "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspaces_coreg_ask01_workspace_name'))]"
          ],
          "properties": {
              "DisplayName": "Total Bytes responded back to clients by Client IP Address",
              "Category": "Log Management",
              "Query": "search * | extend Type = $table | where Type == W3CIISLog | summarize AggregatedValue = sum(scBytes) by cIP\r\n// Oql: Type=W3CIISLog | Measure Sum(scBytes) by cIP // Args: {OQ: True; WorkspaceId: 00000000-0000-0000-0000-000000000000} // Settings: {PEF: True; SortI: True; SortF: True} // Version: 0.1.122",
              "Version": 2
          }
      },
      {
          "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
          "apiVersion": "2020-08-01",
          "name": "[concat(parameters('workspaces_coreg_ask01_workspace_name'), '/LogManagement(', parameters('workspaces_coreg_ask01_workspace_name'), ')_LogManagement|TotalBytesRespondedToClientsByEachIISServerIPAddress')]",
          "dependsOn": [
              "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspaces_coreg_ask01_workspace_name'))]"
          ],
          "properties": {
              "DisplayName": "Total Bytes responded back to clients by each IIS ServerIP Address",
              "Category": "Log Management",
              "Query": "search * | extend Type = $table | where Type == W3CIISLog | summarize AggregatedValue = sum(scBytes) by sIP\r\n// Oql: Type=W3CIISLog | Measure Sum(scBytes) by sIP // Args: {OQ: True; WorkspaceId: 00000000-0000-0000-0000-000000000000} // Settings: {PEF: True; SortI: True; SortF: True} // Version: 0.1.122",
              "Version": 2
          }
      },
      {
          "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
          "apiVersion": "2020-08-01",
          "name": "[concat(parameters('workspaces_coreg_ask01_workspace_name'), '/LogManagement(', parameters('workspaces_coreg_ask01_workspace_name'), ')_LogManagement|TotalBytesSentByClientIPAddress')]",
          "dependsOn": [
              "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspaces_coreg_ask01_workspace_name'))]"
          ],
          "properties": {
              "DisplayName": "Total Bytes sent by Client IP Address",
              "Category": "Log Management",
              "Query": "search * | extend Type = $table | where Type == W3CIISLog | summarize AggregatedValue = sum(csBytes) by cIP\r\n// Oql: Type=W3CIISLog | Measure Sum(csBytes) by cIP // Args: {OQ: True; WorkspaceId: 00000000-0000-0000-0000-000000000000} // Settings: {PEF: True; SortI: True; SortF: True} // Version: 0.1.122",
              "Version": 2
          }
      },
      {
          "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
          "apiVersion": "2020-08-01",
          "name": "[concat(parameters('workspaces_coreg_ask01_workspace_name'), '/LogManagement(', parameters('workspaces_coreg_ask01_workspace_name'), ')_LogManagement|WarningEvents')]",
          "dependsOn": [
              "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspaces_coreg_ask01_workspace_name'))]"
          ],
          "properties": {
              "DisplayName": "All Events with level \"Warning\"",
              "Category": "Log Management",
              "Query": "Event | where EventLevelName == \"warning\" | sort by TimeGenerated desc\r\n// Oql: Type=Event EventLevelName=warning // Args: {OQ: True; WorkspaceId: 00000000-0000-0000-0000-000000000000} // Settings: {PTT: True; SortI: True; SortF: True} // Version: 0.1.122",
              "Version": 2
          }
      },
      {
          "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
          "apiVersion": "2020-08-01",
          "name": "[concat(parameters('workspaces_coreg_ask01_workspace_name'), '/LogManagement(', parameters('workspaces_coreg_ask01_workspace_name'), ')_LogManagement|WindowsFireawallPolicySettingsChanged')]",
          "dependsOn": [
              "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspaces_coreg_ask01_workspace_name'))]"
          ],
          "properties": {
              "DisplayName": "Windows Firewall Policy settings have changed",
              "Category": "Log Management",
              "Query": "Event | where EventLog == \"Microsoft-Windows-Windows Firewall With Advanced Security/Firewall\" and EventID == 2008 | sort by TimeGenerated desc\r\n// Oql: Type=Event EventLog=\"Microsoft-Windows-Windows Firewall With Advanced Security/Firewall\" EventID=2008 // Args: {OQ: True; WorkspaceId: 00000000-0000-0000-0000-000000000000} // Settings: {PTT: True; SortI: True; SortF: True} // Version: 0.1.122",
              "Version": 2
          }
      },
      {
          "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
          "apiVersion": "2020-08-01",
          "name": "[concat(parameters('workspaces_coreg_ask01_workspace_name'), '/LogManagement(', parameters('workspaces_coreg_ask01_workspace_name'), ')_LogManagement|WindowsFireawallPolicySettingsChangedByMachines')]",
          "dependsOn": [
              "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspaces_coreg_ask01_workspace_name'))]"
          ],
          "properties": {
              "DisplayName": "On which machines and how many times have Windows Firewall Policy settings changed",
              "Category": "Log Management",
              "Query": "Event | where EventLog == \"Microsoft-Windows-Windows Firewall With Advanced Security/Firewall\" and EventID == 2008 | summarize AggregatedValue = count() by Computer | limit 500000\r\n// Oql: Type=Event EventLog=\"Microsoft-Windows-Windows Firewall With Advanced Security/Firewall\" EventID=2008 | measure count() by Computer | top 500000 // Args: {OQ: True; WorkspaceId: 00000000-0000-0000-0000-000000000000} // Settings: {PTT: True; SortI: True; SortF: True} // Version: 0.1.122",
              "Version": 2
          }
      }
  ]
}
